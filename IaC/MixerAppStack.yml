AWSTemplateFormatVersion: '2010-09-09'
Description: 'Mixer App Stack: Lambda (container), API Gateway, S3 permissions'

Parameters:
  MixerOutputBucket:
    Type: String
    Description: S3 bucket for mixed files (imported/exported from infra stack)
  MusicBucketName:
    Type: String
    Description: S3 bucket for background music (imported/exported from infra stack)
  MixerEcrRepoUri:
    Type: String
    Description: ECR repo URI (imported/exported from infra stack, WITHOUT :tag at end)
  PollyApiUrl:
    Type: String
    Description: Polly Speech API endpoint (imported/exported from polly stack)

Resources:
  MixerLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: MixerLambdaPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              # Allow Lambda to get music from the music S3 bucket
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:ListBucket
                  - s3:HeadObject
                Resource: 
                  - !Sub arn:aws:s3:::${MusicBucketName}
                  - !Sub arn:aws:s3:::${MusicBucketName}/*
              # Allow Lambda to fully manage the output S3 bucket
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:DeleteObject
                  - s3:ListBucket
                Resource:
                  - !Sub arn:aws:s3:::${MixerOutputBucket}
                  - !Sub arn:aws:s3:::${MixerOutputBucket}/*
              # Allow Lambda to pull image from ECR
              - Effect: Allow
                Action:
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - ecr:BatchCheckLayerAvailability
                Resource: !Sub arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/${MixerEcrRepoUri}
              # Allow getting an ECR token (always '*')
              - Effect: Allow
                Action:
                  - ecr:GetAuthorizationToken
                Resource: '*'

  MixerLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub MixerLambdaFunction-${AWS::StackName}
      PackageType: Image
      Role: !GetAtt MixerLambdaRole.Arn
      Code:
        ImageUri: !Sub ${MixerEcrRepoUri}:latest
      Timeout: 60
      MemorySize: 2048
      Environment:
        Variables:
          POLLY_API_URL: !Ref PollyApiUrl
          MUSIC_BUCKET: !Ref MusicBucketName
          OUTPUT_BUCKET: !Ref MixerOutputBucket

  MixerApi:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: MixerApi
      ProtocolType: HTTP
      CorsConfiguration:
        AllowOrigins:
          - '*'
        AllowMethods:
          - POST
          - OPTIONS
        AllowHeaders:
          - '*'

  MixerApiIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref MixerApi
      IntegrationType: AWS_PROXY
      IntegrationUri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MixerLambdaFunction.Arn}/invocations
      PayloadFormatVersion: '2.0'

  MixerApiRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref MixerApi
      RouteKey: POST /mixstory
      Target: !Join
        - /
        - - integrations
          - !Ref MixerApiIntegration

  MixerApiStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId: !Ref MixerApi
      StageName: prod
      AutoDeploy: true

  MixerLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref MixerLambdaFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${MixerApi}/*/*

Outputs:
  MixerApiUrl:
    Description: Mixer API POST endpoint (returns presigned download URL)
    Value: !Sub https://${MixerApi}.execute-api.${AWS::Region}.amazonaws.com/prod/mixstory

  MixerLambdaFunctionArn:
    Description: Lambda function ARN (useful for debugging/integrations)
    Value: !GetAtt MixerLambdaFunction.Arn

  MixerLambdaRoleArn:
    Description: Lambda IAM Role ARN
    Value: !GetAtt MixerLambdaRole.Arn
